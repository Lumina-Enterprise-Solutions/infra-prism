# .github/workflows/deploy-dev.yml
name: Deploy to Dev Server

on:
  push:
    branches:
    - develop # Ganti dengan branch utama Anda jika perlu (misal: main)

jobs:
  deploy:
    name: Deploy to Development Environment
    runs-on: self-hosted # PENTING: Jalankan di runner yang ada di server dev Anda

    steps:
    - name: 1. Checkout repository
      uses: actions/checkout@v4

    - name: 2. Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GH_PAT }} # Secret berisi Personal Access Token

    - name: 3. Create .env file from secrets
      run: |
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "POSTGRES_HOST=db-postgres" >> .env
        echo "POSTGRES_PORT=5432" >> .env
        echo "VAULT_TOKEN=root-token-for-dev" >> .env
        echo "JAEGER_ENDPOINT=jaeger:4317" >> .env
        echo "VAULT_ADDR=http://vault:8200" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
      shell: bash

    - name: 4. Pull latest images from registry
      run: docker compose -f docker-compose.prod.yml pull

    - name: 5. Deploy services with Docker Compose
      run: |
        docker compose -f docker-compose.prod.yml \
        --profile core --profile monitoring up -d --remove-orphans

    - name: 6. Prune old docker images
      run: docker image prune -a -f
